import os
from surround import Config
from pathlib import Path

CONFIG = Config(str(Path(os.path.dirname(__file__)).resolve()))
DOIT_CONFIG = {{'verbosity':2}}
IMAGE = "%s/%s:%s" % (CONFIG["company"], CONFIG["image"], CONFIG["version"])

split_path = os.path.splitdrive(CONFIG["project_root"])

# If the system has a drive letter, change the project_root to /c/rest/of/path
if (split_path[0] != ''):
    drive_letter = split_path[0][0].lower()
    path = split_path[1].replace('\\', '/')

    CONFIG.read_from_dict({{"project_root": '/' + drive_letter + path}})

def task_build():
    """Build the Docker image for the current project"""
    return {{
        'actions': ['docker build --tag=%s .' % IMAGE]
    }}

def task_remove():
    """Remove the Docker image for the current project"""
    return {{
        'actions': ['docker rmi %s -f' % IMAGE]
    }}

def task_dev():
    """Run the main task for the project"""
    return {{
        'actions': ["docker run --volume \"%s/\":/app %s" % (CONFIG["project_root"], IMAGE)]
    }}

def task_prod():
    """Run the main task inside a Docker container for use in production """
    return {{
        'actions': ["docker run %s" % IMAGE],
        'task_dep': ["build"]
    }}
